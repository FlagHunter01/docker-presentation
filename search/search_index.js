var __index = {"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Rapport de recherche documentaire sur Docker et Kubernetes","text":"<p>Des solutions de s\u00e9curit\u00e9 pour prot\u00e9ger les environnements de conteneurs tels que Docker et Kubernetes.</p> <p>Par Astrid LEVEQUE et Tim FROLOV</p> <p>Lexique</p> <p>Les termes techniques comme runtime<sup>1</sup> sont d\u00e9finis dans le lexique en bas de page.</p> <ol> <li> <p>Runtime : environnement d\u2019ex\u00e9cution d\u2019un programme qui est responsable de la communication entre le programme, le mat\u00e9riel et le syst\u00e8me d\u2019exploitation.\u00a0\u21a9</p> </li> </ol>"},{"location":"conclusion.html","title":"3 - Conclusion","text":"<p>Les conteneurs sont une technologie \u00e9mergente qui permet d\u2019exporter et d\u2019ex\u00e9cuter une application en s\u2019abstrayant de son environnement. Ceci pr\u00e9sente deux avantages majeurs : </p> <ul> <li>Le d\u00e9veloppement et le test des applications sont grandement simplifi\u00e9s</li> <li>Les ex\u00e9cutables ainsi cr\u00e9\u00e9s sont autosuffisants, limitant leur d\u00e9pendances aux ressources externes et donc leur vuln\u00e9rabilit\u00e9.  </li> </ul> <p>La conteneurisation se distingue des autres formes de virtualisation par sa l\u00e9g\u00e8ret\u00e9 d\u2019ex\u00e9cution et ses possibilit\u00e9s de gestion group\u00e9e. Ainsi, Kubernetes propose des outils efficaces de cr\u00e9ation, maintien en op\u00e9ration et autres formes de gestion des conteneurs visant \u00e0 minimiser le temps d\u2019arr\u00eat de production et maximiser la s\u00e9curit\u00e9 des applications. </p> <p>En s'appuyant sur ces deux solutions, Docker et Kubernetes, il est possible de tirer le meilleur de la conteneurisation et gagner en efficacit\u00e9 mat\u00e9rielle, temporelle et \u00e9conomique. </p> <p>Kubernetes permet d\u2019augmenter la s\u00e9curit\u00e9 de cette mise en relation de dockers \u00e0 travers l\u2019authentification et la gestion des ressources d\u2019un cluster. Il ajoute \u00e9galement un niveau de s\u00e9curit\u00e9 \u00e0 travers son stockage des donn\u00e9es sensibles et sa limitation d\u2019acc\u00e8s \u00e0 des r\u00e9seaux ext\u00e9rieurs d\u2019un cluster.</p> <p>Il faut cependant relever certains dysfonctionnements en mati\u00e8re de s\u00e9curit\u00e9 qui impactent principalement les architectures utilisant Windows. </p> <p>Toutes les PaaS majeures comme Microsoft, Amazon ou Google basent leurs services sur cette technologie et contribuent \u00e0 son \u00e9volution permanente. La conteneurisation fait \u00e9galement son entr\u00e9e dans les terminaux utilisateurs sous Windows 11.</p>"},{"location":"docker.html","title":"1 - Docker","text":""},{"location":"docker.html#11-presentation-de-docker-inc","title":"1.1 - Pr\u00e9sentation de Docker, Inc.","text":"<p>dotCoud, Inc. est une soci\u00e9t\u00e9 am\u00e9ricaine fond\u00e9e en 2008 par Kamel Founadi, Solomon Hykes et Sebastien Pahl. A l'origine, il s'agissait d'une PaaS (Platform as a Service) qui permettait aux d\u00e9veloppeurs de compiler et ex\u00e9cuter du code sur leur plateforme.</p> <p>En 2013, la soci\u00e9t\u00e9 se renomma Docker, Inc et lan\u00e7a un produit homonyme qui r\u00e9volutionna l\u2019utilisation des conteneurs. Au fil du temps, Docker d\u00e9veloppa plusieurs produits qui sont encore consid\u00e9r\u00e9s aujourd\u2019hui comme des standards de l\u2019industrie des conteneurs :</p> <ul> <li>Leur produit phare homonyme est un moteur de conteneur qui occupe aujourd\u2019hui la moiti\u00e9 du march\u00e9 mondial. </li> <li>DockerHub est une solution de stockage et de distribution de conteneurs, comme un GitHub sp\u00e9cialis\u00e9 pour les conteneurs. Il est utilis\u00e9 par des organisations mondialement connues. </li> <li>containerd est le runtime<sup>1</sup> de conteneur (l\u2019\u00e9quivalent d\u2019un hyperviseur pour une machine virtuelle) de Docker. containerd \u00e0 \u00e9t\u00e9 donn\u00e9 par Docker \u00e0 la Linux Foundation et est aujourd\u2019hui le runtime standard de la CNCF (Cloud Native Computing Foundation)</li> <li>Le projet Moby est compos\u00e9 de librairies pour la gestion de conteneurs, un cadre de test et de d\u00e9ploiement de conteneurs. Il sert \u00e0 la construction de syst\u00e8mes plus complexes bas\u00e9s sur Docker et containerd. </li> <li>Docker Scout est un analyseur de conteneurs qui aide les d\u00e9veloppeurs \u00e0 corriger les vuln\u00e9rabilit\u00e9s connues. </li> </ul> <p>Docker est l\u2019entreprise la plus connue sur le march\u00e9 des conteneurs et de leur gestion et poss\u00e8de aujourd\u2019hui la plus grande part du march\u00e9, mais elle subit une concurrence de plus en plus rude de la part de AWS et Azure. </p>"},{"location":"docker.html#12-fonctionnement-de-docker","title":"1.2 - Fonctionnement de Docker","text":"<p>Nous allons \u00e0 pr\u00e9sent nous concentrer sur le produit Docker, et plus particuli\u00e8rement le fonctionnement de sa gestion de conteneurs sous Linux.  d\u2019applications Docker est un moteur de conteneurisation, c'est-\u00e0-dire un outil qui permet de les construire, les ex\u00e9cuter et les g\u00e9rer. </p> <p>La conteneurisation est une forme de virtualisation alternative qui n\u2019\u00e9mule pas de syst\u00e8me d\u2019exploitation complet. Chaque conteneur fonctionne dans un environnement qui contient les \u00e9l\u00e9ments strictement n\u00e9cessaires \u00e0 son fonctionnement, et utilise directement les ressources du noyau Linux. </p> <p>Gr\u00e2ce \u00e0 ceci, nous pouvons s\u00e9parer les serveurs en plusieurs conteneurs responsables chacun d\u2019un service. Cette solution permet d\u2019avoir un contr\u00f4le plus fin des ressources allou\u00e9es et facilite la continuit\u00e9 de production pendant les mises \u00e0 jour. En effet, il est plus facile de pr\u00e9dire les besoins d\u2019un programme unique comme Apache qu\u2019un syst\u00e8me entier.  Ainsi, les conteneurs sont moins gourmands en ressources que les machines virtuelles standard. De plus, la possibilit\u00e9 de g\u00e9rer les conteneurs individuellement permet de cibler les arr\u00eats programm\u00e9s sans aucune r\u00e9percussion sur les autres services en cours. </p> <p> </p> Comparaison d\u2019ensemble entre les conteneurs et les machines virtuelles <p>Les conteneurs pr\u00e9sentent aussi un gros avantage pour le d\u00e9veloppement d\u2019applications car ils permettent de s\u2019affranchir des contraintes de l\u2019environnement : une fois export\u00e9e avec ses d\u00e9pendances, une image<sup>2</sup>de conteneur est autosuffisante et peut \u00eatre ex\u00e9cut\u00e9e sur n\u2019importe quelle machine qui prend en charge Docker, ind\u00e9pendamment du syst\u00e8me d\u2019exploitation ou des caract\u00e9ristiques mat\u00e9rielles. </p> <p>Docker est un outil extr\u00eamement puissant qui permet de d\u00e9velopper des conteneurs, cr\u00e9er des images, les exporter, les d\u00e9marrer et les g\u00e9rer. </p>"},{"location":"docker.html#121-fonctionnement-de-haut-niveau","title":"1.2.1 - Fonctionnement de haut niveau","text":"<p>Derri\u00e8re son faible co\u00fbt op\u00e9rationnel et son interface intuitive se cache un outil complexe, dont nous \u00e9tudierons les principes de base de fonctionnement ci-dessous. </p> <ul> <li>Lors d'une interaction avec l'interface de docker (comme un clique sur le bouton \u201carr\u00eater le conteneur\u201d), les actions sont interpr\u00e9t\u00e9es par un daemon, dockerd. Celui-ci est responsable des t\u00e2ches de haut niveau comme le build ou l\u2019authentification. </li> <li>containerd est un autre daemon responsable du cycle de vie des conteneurs (d\u00e9marrage, gestion, arr\u00eat), de la gestion de leur images ainsi que d\u2019autres op\u00e9rations comme la gestion des ressources de stockage et du r\u00e9seau virtuel. Il est couramment surnomm\u00e9 \u201cruntime de haut niveau\u201d. </li> </ul> <p>Ces deux daemons communiquent par gRCP<sup>7</sup>. </p> <p> </p> Diagramme des paquetages de haut niveau <p>Cel\u00e0-dit, containerd ne cr\u00e9e pas les conteneurs lui-m\u00eame et doit faire appel \u00e0 des programmes sous-jacents pr\u00e9vus \u00e0 cet effet. </p>"},{"location":"docker.html#122-fonctionnement-de-bas-niveau","title":"1.2.2 - Fonctionnement de bas niveau","text":"<p>Dans son \u00e9tat initial, un conteneur est une archive contenant une image et un fichier de configuration JSON.</p> <p>L\u2019image de conteneur \u00e0 la m\u00eame fonction qu\u2019une image de machine virtuelle, elle contient les binaires \u00e0 ex\u00e9cuter.  Le fichier JSON sert \u00e0 transmettre les directives relatives aux binaires \u00e0 ex\u00e9cuter, \u00e0 l\u2019allocation des ressources et \u00e0 l\u2019emplacement du rootfs<sup>3</sup>.</p> <p>Chez Docker, le conteneur est extrait, ex\u00e9cut\u00e9 puis g\u00e9r\u00e9 par libcontainer. C\u2019est ce programme qui ex\u00e9cute les actions de bas niveau, notamment la communication avec le syst\u00e8me (namespaces<sup>4</sup>, cgroups etc). libcontainer le v\u00e9ritable runtime de Docker. </p> <p>libcontainer poss\u00e8de une API<sup>6</sup> : runc. Cette derni\u00e8re permet d'interagir avec libcontainer par ligne de commande. Elle est l\u2019API runtime officielle de la Open Container Initiative depuis que Docker leur \u00e0 fait don de libcontainer. </p> <p> </p> Diagramme des paquetages de bas niveau"},{"location":"docker.html#123-lien-entre-les-deux-niveaux","title":"1.2.3 - Lien entre les deux niveaux","text":"<p>containerd n\u2019appelle pas directement runc pour cr\u00e9er un conteneur. Une shim<sup>5</sup> est utilis\u00e9e pour rendre les conteneurs ind\u00e9pendants de Docker.  Ceci \u00e0 plusieurs avantages :</p> <ul> <li>Une fois le conteneur d\u00e9marr\u00e9, runc peut s\u2019arr\u00eater. Ceci limite la quantit\u00e9 de processus qui fonctionnent de fa\u00e7on perp\u00e9tuelle. </li> <li>La shim intercepte les entr\u00e9es / sorties et les descripteurs de fichiers du conteneur :<ul> <li>Le conteneur peut ainsi survivre au red\u00e9marrage de Docker</li> <li>La shim peut loguer et transmettre les informations d\u2019\u00e9tat du conteneur sans que Docker ait besoin d\u2019attendre le changement d\u2019\u00e9tat avec un appel syst\u00e8me.</li> </ul> </li> </ul> <p>Ainsi, la shim d\u00e9marre runc puis r\u00e9cup\u00e8re le lien de parent\u00e9 du conteneur au moment o\u00f9 runc s\u2019arr\u00eate. </p> <p>On obtient donc le diagramme de paquetages complet suivant :</p> <p> </p> Diagramme de paquetages complet"},{"location":"docker.html#13-securite","title":"1.3 - S\u00e9curit\u00e9","text":""},{"location":"docker.html#131-securite-conceptuelle","title":"1.3.1- S\u00e9curit\u00e9 conceptuelle","text":"<p>Les conteneurs sont naturellement moins sujets aux risques d\u2019attaque gr\u00e2ce \u00e0 leur isolement. Par d\u00e9faut, leurs capacit\u00e9s \u00e0 interagir avec le syst\u00e8me ou les autres conteneurs sont tr\u00e8s limit\u00e9es. Il en d\u00e9coule que les risques qu\u2019ils soient contamin\u00e9s par un code malicieux ou qu\u2019ils infectent le syst\u00e8me ou un autre conteneur sont moindres. </p> <p>De plus, ils sont faciles \u00e0 mettre \u00e0 jour ou \u00e0 arr\u00eater en cas de besoin, prenant moins de temps et ayant moins d\u2019incidence sur la production que des machines virtuelles. </p> <p>Les conteneurs ont une dur\u00e9e de vie assez faible, ce qui limite la fen\u00eatre d\u2019action d\u2019un attaquant \u00e9ventuel et r\u00e9duit sa probabilit\u00e9 de succ\u00e8s. </p>"},{"location":"docker.html#132-securite-linux","title":"1.3.2 - S\u00e9curit\u00e9 Linux","text":"<p>N\u2019utilisant pas de superviseur, les conteneurs sont g\u00e9rables avec les outils de s\u00e9curit\u00e9 Linux. </p> <p>Nous verrons ici quelques outils couramment utilis\u00e9s pour s\u00e9curiser les conteneurs sur Linux. </p> <p>Docker peut \u00eatre s\u00e9curis\u00e9 gr\u00e2ce \u00e0 Linux Security Module, une infrastructure Linux qui permet d\u2019ajouter certaines extensions au noyau, notamment capabilities, SELinux et  </p>"},{"location":"docker.html#1321-capabilities","title":"1.3.2.1 - capabilities","text":"<p>capabilities est un module de gestion de droits. Les appels syst\u00e8me et les ex\u00e9cutables sont associ\u00e9s \u00e0 des groupes et ne peuvent \u00eatre ex\u00e9cut\u00e9s que par un processus appartenant au m\u00eame groupe. Ceci permet d\u2019avoir un contr\u00f4le beaucoup plus fin sur les droits des processus et permet d\u2019impl\u00e9menter une politique de moindre privil\u00e8ge, renfor\u00e7ant ainsi la s\u00e9curit\u00e9. </p>"},{"location":"docker.html#1322-selinux","title":"1.3.2.2 - SELinux","text":"<p>Security-Enhanced Linux est un autre module de s\u00e9curit\u00e9 permettant de mettre en place des contr\u00f4les d\u2019acc\u00e8s obligatoires (MAC). Son fonctionnement est semblable \u00e0 celui de capabilities : chaque entit\u00e9 se voit attribuer des tags, qui correspondent \u00e0 des autorisations. Si l'action demand\u00e9e par un processus ne fait pas partie des autorisations dont elle dispose, elle n\u2019est pas ex\u00e9cut\u00e9e. Une utilisation tr\u00e8s granuleuse de ce syst\u00e8me entra\u00eene une grande complexit\u00e9 d\u2019administration.  Par ailleurs, m\u00eame les processus ayant le PID 0 sont soumis aux politiques.</p>"},{"location":"docker.html#1323-apparmor","title":"1.3.2.3 - AppArmor","text":"<p>AppArmor est n\u00e9 du besoin d\u2019avoir un outil plus facilement administrable que SELinux.  Il se distingue de ce dernier par sa capacit\u00e9 \u00e0 \u00e9tudier les processus et proposer des profils personnalis\u00e9s automatiquement. En effet, un de ses modes de fonctionnement permet de loguer les infractions au profil par d\u00e9faut plut\u00f4t que de les bloquer. AppArmor propose ensuite un profil de droits en fonction des appels recens\u00e9s.  Contrairement \u00e0 SELinux, AppArmor fonctionne avec des liens plut\u00f4t qu\u2019avec des tags, et est donc compatible avec tous les syst\u00e8mes de fichiers. </p>"},{"location":"docker.html#1324-seccomp","title":"1.3.2.4 - seccomp","text":"<p>secure computing mode permet d\u2019isoler un processus en interdisant tout appel syst\u00e8me \u00e0 l\u2019exception de <code>exit()</code>, <code>sigreturn()</code>, <code>read()</code> et <code>write()</code> sur les descripteurs de fichier d\u00e9j\u00e0 ouverts. Si le processus fait un autre appel syst\u00e8me, il est tu\u00e9.  </p> <p>Cette fonctionnalit\u00e9 peut \u00eatre utilis\u00e9e pour isoler efficacement les conteneurs du syst\u00e8me. Il est \u00e0 noter que l'extension seccomp-bpf permet de personnaliser les appels syst\u00e8me filtr\u00e9s pour donner plus de flexibilit\u00e9 aux conteneurs. </p>"},{"location":"docker.html#133-aspects-negatifs","title":"1.3.3 - Aspects n\u00e9gatifs","text":""},{"location":"docker.html#1331-partage-de-la-memoire","title":"1.3.3.1 - Partage de la m\u00e9moire","text":"<p>Les conteneurs sont souvent construits \u00e0 partir d\u2019autres conteneurs d\u00e9j\u00e0 existants, et d\u00e9pendent souvent des m\u00eames librairies. </p> <p>Si deux conteneurs utilisent la m\u00eame librairie, elle n'est charg\u00e9e qu\u2019une seule fois en m\u00e9moire et les deux conteneurs y acc\u00e8dent en concurrence. </p> <p>Bien que ceci soit sans danger pour une librairie comme stdlib, des librairies plus complexes pourraient \u00eatre exploit\u00e9es pour transmettre des donn\u00e9es entre deux conteneurs et offrir ainsi une faille de s\u00e9curit\u00e9 potentielle. </p> <p>Aujourd\u2019hui, la plupart des conteneurs sont compil\u00e9s avec toutes leurs d\u00e9pendances de sorte \u00e0 ne pas avoir \u00e0 s'appuyer sur des librairies partag\u00e9es. </p>"},{"location":"docker.html#failles-decouvertes","title":"Failles d\u00e9couvertes","text":"<p>Depuis la cr\u00e9ation de Docker, plusieurs failles ont \u00e9t\u00e9 d\u00e9couvertes. La plus impressionnante donnait la possibilit\u00e9 aux conteneurs d\u2019\u00e9craser l\u2019ex\u00e9cutable runc avec leur propre code. Ainsi, containerd, mais Docker et Kubernetes \u00e9taient vuln\u00e9rables \u00e0 une attaque par conteneur et mettaient en danger le syst\u00e8me et les donn\u00e9es qui s\u2019y trouvent. </p> <p>D\u2019autres failles majeurs ont \u00e9t\u00e9 d\u00e9couvertes:</p> <p>Dans certains cas, un conteneur fra\u00eechement d\u00e9marr\u00e9 pouvait \u00e9crire dans des fichiers dont il ne disposait que le droit de lecture. Ceci pouvait lui permettre de faire une escalade de privil\u00e8ges. Une autre vuln\u00e9rabilit\u00e9 permettait d\u2019injecter du code dans le conteneur lors d\u2019un chargement dynamique de librairie. Une version de Docker crashait lorsque le logiciel lisait un fichier JSON erron\u00e9 au moment de d\u00e9marrer le conteneur.</p>"},{"location":"docker.html#14-resume","title":"1.4 - R\u00e9sum\u00e9","text":"<p>Docker permet de faciliter la cr\u00e9ation et le d\u00e9ploiement d\u2019applications, tout en diminuant leur co\u00fbt de fonctionnement. \u00c9tant autonomes et s\u2019int\u00e9grant avec les services de s\u00e9curit\u00e9 de Linux, les conteneurs sont aussi un bon vecteur de s\u00e9curisation des services d\u2019une organisation. </p> <p>De plus, il est possible d\u2019augmenter la fiabilit\u00e9 et le rendement des conteneurs en utilisant des syst\u00e8mes d\u2019automatisation comme Kubernetes, qui sera abord\u00e9 dans la partie suivante. </p>"},{"location":"docker.html#15-sources","title":"1.5 - Sources","text":"<p>Introduction:</p> <ul> <li>Docker</li> <li>Wikipedia - Docker</li> <li>Palark - Statistiques de march\u00e9</li> <li>Moby</li> <li>Docker Scout - Documentation</li> </ul> <p>Fonctionnement de Docker:</p> <ul> <li>Wikipedia - OS virtualization</li> <li>containerd</li> <li>Docker - dockerd</li> <li>Cloud Native Computing Foundation - containerd graduation</li> <li>Stack Overflow - containerized vs libcontainer</li> <li>opensource.com - runtimes</li> <li>Wikipedia - runtime</li> <li>LWN.ney - Demystifying container runtimes</li> <li>PDF de Dockercon16</li> <li>Quarkslab - Digging into runtimes</li> <li>Wikipedia - namespaces</li> <li>Wikipedia - Shim</li> </ul> <p>S\u00e9curit\u00e9:</p> <ul> <li>The Linux Kernel - Linux Security Module Usage</li> <li>Editions Diamond - Capabilities</li> <li>man7 - Capabilities</li> <li>Wikipedia - SELinux</li> <li>SELinux</li> <li>Wikipedia - AppArmor</li> <li>Wikipedia - seccomp</li> <li>Google - seccomp</li> <li>LEMONDEINFORMATIQUE - Une faille dans Runc rend vuln\u00e9rable Docker et Kubernetes</li> </ul> <p>R\u00e9daction:</p> <ul> <li>Wikipedia - Diagramme des paquetages</li> <li>Universit\u00e9 de Li\u00e8ge - Comment r\u00e9diger un rapport technique ?</li> </ul> <ol> <li> <p>Runtime : environnement d\u2019ex\u00e9cution d\u2019un programme qui est responsable de la communication entre le programme, le mat\u00e9riel et le syst\u00e8me d\u2019exploitation.\u00a0\u21a9</p> </li> <li> <p>Image : un conteneur inactif persiste dans le temps sous forme d\u2019image, semblable \u00e0 une image de machine virtuelle.\u00a0\u21a9</p> </li> <li> <p>rootfs : Root File System, l\u2019emplacement du dossier racine du syst\u00e8me de fichiers du syst\u00e8me h\u00e9berg\u00e9.\u00a0\u21a9</p> </li> <li> <p>namespaces : dans un syst\u00e8me d\u2019exploitation, tous les noms doivent \u00eatre uniques ( il ne peut y avoir deux fichiers ou processus ayant le m\u00eame nom). Ceci est tr\u00e8s limitant, notamment pour faire tourner plusieurs conteneurs en parall\u00e8le. namespaces permet de d\u00e9finir la port\u00e9e des noms et donc de les r\u00e9utiliser sans cr\u00e9er de conflits.\u00a0\u21a9</p> </li> <li> <p>Shim : une shim est un interface qui intercepte les appels syst\u00e8me et API d\u2019un programme pour les traiter soi-m\u00eame. Elles sont souvent utilis\u00e9es pour pallier des probl\u00e8mes de compatibilit\u00e9 entre programmes vieillissants.\u00a0\u21a9</p> </li> <li> <p>API : Application Programming Interface d\u00e9signe une interface qui permet \u00e0 un programme de communiquer avec d\u2019autres en se basant sur un protocole de communication commun.\u00a0\u21a9</p> </li> <li> <p>gRPC :  gRPC est un composant permettant aux logiciels de communiquer entre eux via HTTP en utilisant l'interface local de la machine, s\u2019abstrayant ainsi de son environnement.\u00a0\u21a9</p> </li> </ol>"},{"location":"kubernetes.html","title":"2 - Kubernetes","text":""},{"location":"kubernetes.html#21-presentation-de-kubernetes","title":"2.1 - Pr\u00e9sentation de Kubernetes","text":"<p>Kubernetes est une plateforme permettant d'automatiser le d\u00e9ploiement, la mont\u00e9e en charge et la mise en \u0153uvre de conteneurs d'application sur des groupes de serveurs. Kubernetes est aussi une plateforme de microservices. Aujourd\u2019hui, toutes les applications sont compos\u00e9es de microservices, des de services monot\u00e2ches. Kubernetes permet de mettre en relation tous les microservices dispers\u00e9s \u00e0 travers plusieurs conteneurs afin d\u2019ex\u00e9cuter une application.</p> <p>Kubernetes favorise \u00e0 la fois l'\u00e9criture de configuration et l'automatisation de cr\u00e9ation de conteneur. Les services, le support et les outils Kubernetes sont facilement int\u00e9grables \u00e0 un cluster. Kubernetes est un syst\u00e8me open source. Il est d\u00e9velopp\u00e9 par Google et la Cloud Native Computing Foundation. La premi\u00e8re annonce de Kubernetes a \u00e9t\u00e9 faite en 2014 et sa  premi\u00e8re version est sortie en 2015.</p> <p>Il permet le stockage des informations sensibles comme des mots de passe, des jetons d\u2019authentification ou des cl\u00e9s.  Il ne faut pas confondre l\u2019utilisation de kubernetes avec :</p> <ul> <li>un service mesh : un service d\u2019application pr\u00e9configur\u00e9 qui permet aux diff\u00e9rents services de communiquer entre eux, de partager des donn\u00e9es et d\u2019assurer une coh\u00e9rence tout au long du cycle de vie d\u2019une application. Par exemple, le service mesh Istio est un outil pour Kubernetes.</li> <li>Platform as a Service system tel que Docker.</li> </ul> <p>Il existe plusieurs distributions telles que minikube pour la gestion d\u2019un cluster local ou Amazon Elastic Kubernetes Service (Amazon EKS).</p> <p>Kubernetes est bas\u00e9 sur le langage de programmation Go. Il poss\u00e8de une communaut\u00e9 active sur la d\u00e9tection et le patch de failles.</p>"},{"location":"kubernetes.html#22-fonctionnement-de-kubernetes","title":"2.2 - Fonctionnement de Kubernetes","text":""},{"location":"kubernetes.html#221-architecture","title":"2.2.1 - Architecture","text":"<p>Les pods sont les plus petites unit\u00e9s informatiques d\u00e9ployables qui peuvent \u00eatre cr\u00e9\u00e9es et g\u00e9r\u00e9es dans Kubernetes. Un pod est un groupement d\u2019un ou plusieurs conteneurs qui partagent les m\u00eames ressources et stockage. Le conteneur d\u2019un pod peut \u00eatre ex\u00e9cut\u00e9 en mode privil\u00e9gi\u00e9.</p> <p>Une node est une machine physique ou virtuelle (en fonction du cluster). Tous les clusters poss\u00e8dent au moins une node. Chaque node est dirig\u00e9e par le panneau de contr\u00f4le et contient les services n\u00e9cessaires pour ex\u00e9cuter chaque pod.</p> <p>Les composants d\u2019une node incluent :</p> <ul> <li>kubelet, un agent qui permet d'ex\u00e9cuter chaque node et permet de v\u00e9rifier que chaque conteneur est dans un pod.</li> <li>Container Runtimes<sup>1</sup>,un logiciel qui permet de faire tourner les pods, il est responsable pour les conteneurs en cours d'ex\u00e9cution.</li> <li>Le Container Runtime Interface (CRI) permet \u00e0 kubelet d\u2019utiliser les conteneurs sans avoir besoin de recompiler tous les composants d\u2019un cluster.</li> </ul> <p>Kubernetes poss\u00e8de un ordonnanceur<sup>2</sup> pour s\u2019assurer du bon fonctionnement des pods avec les nodes. Ce fonctionnement d\u00e9pend de contraintes comme les ressources ou les politiques.</p> <p>Le Cloud Controller Manager permet \u00e0 Kubernetes de contr\u00f4ler les ressources. Il poss\u00e8de de nombreux outils comme le node controller qui est responsable de la mise \u00e0 jour des nodes afin qu\u2019elles correspondent aux normes du serveur. Il permet \u00e9galement de configurer des routes dans le cloud ainsi que du filtrage de paquets, de l\u2019adresse IP et du load balancing.</p> <p>Les applications peuvent acc\u00e9der aux ressources d\u2019un h\u00f4te sans avoir n\u00e9cessairement besoin des informations contenues dans celui-ci. </p> <p>L\u2019utilisation de baux permet d\u2019avoir un m\u00e9canisme qui bloque les ressources partag\u00e9es et coordonne les activit\u00e9s entre les diff\u00e9rents membres d\u2019un m\u00eame ensemble.</p> <p>Kubernetes a un daemon (kube-controller-manager) qui est compos\u00e9 de plusieurs contr\u00f4leurs : Node Controller qui permet de d\u00e9tecter et d\u2019apporter une r\u00e9ponse si un n\u0153ud tombe en panne. Endpoint Controller permet de joindre les services et les pods. Service Account and Token Controllers g\u00e8re les comptes et les jetons pour l\u2019acc\u00e8s \u00e0 l\u2019API<sup>3</sup>.</p> <p>Il existe une communication entre les nodes et le panneau de contr\u00f4le \u00e0 travers un appel gRPC<sup>4</sup>.</p> <p>Kubernetes poss\u00e8de un serveur API qui permet aux utilisateurs de contr\u00f4ler les clusters. </p> <p>Kubernetes permet de g\u00e9rer la dur\u00e9e de vie d\u2019un pod et son arr\u00eat. Un utilisateur peut \u00e9galement administrer chaque pod pour changer les informations. Cependant, certaines informations d\u2019un pod sont immuables telles que son nom ou sa date de cr\u00e9ation.</p> <p>De plus, Kubernetes poss\u00e8de une \u201cgarbage collection\u201d qui regroupe divers m\u00e9canismes pour garder un environnement propre. Par exemple, il est utilis\u00e9 lorsque les pods se terminent ou pour supprimer les objets sans r\u00e9f\u00e9rence \u00e0 un propri\u00e9taire.</p>"},{"location":"kubernetes.html#222-services","title":"2.2.2 - Services","text":"<p>Kubernetes d\u00e9finit un service comme une m\u00e9thode permettant d'exposer une application r\u00e9seau qui s'ex\u00e9cute sous une ou plusieurs pods dans un cluster comme kube-proxy.</p> <p>kube-proxy est ex\u00e9cut\u00e9 sur chaque node. Il permet de prendre en compte les services d\u00e9finis dans l\u2019API Kubernetes de chaque n\u0153ud.</p> <p>L\u2019utilisation de mixed version proxy permet aux administrations d\u2019un cluster de haute disponibilit\u00e9 de configurer ce cluster et de le mettre \u00e0 jour de fa\u00e7on plus s\u00fbre en demandant les ressources vers le bon serveur API.</p>"},{"location":"kubernetes.html#223-stockage-des-donnees","title":"2.2.3 - Stockage des donn\u00e9es","text":"<p>Toutes les informations du cluster sont stock\u00e9es dans etcd, une base de donn\u00e9es pour des paires cl\u00e9-valeur. Les informations stock\u00e9es peuvent \u00eatre l\u2019\u00e9tat actuel d\u2019un cluster, les diff\u00e9rentes configurations pour les ressources ou les donn\u00e9es d\u2019ex\u00e9cution. L\u2019utilisation d\u2019etcd permet d\u2019avoir une consistance et une haute disponibilit\u00e9 des valeurs cl\u00e9s stock\u00e9es pour toutes les donn\u00e9es du cluster.</p>"},{"location":"kubernetes.html#23-securite","title":"2.3 - S\u00e9curit\u00e9","text":""},{"location":"kubernetes.html#231-concept-de-base","title":"2.3.1 - Concept de base","text":"<p>La s\u00e9curit\u00e9 de Kubernetes est bas\u00e9e sur le Cloud Native Security. Cette s\u00e9curit\u00e9 se base sur la notion des 4 C, chaque couche du mod\u00e8le s\u2019appuyant sur la s\u00e9curit\u00e9 de sa couche externe.</p> <p></p> <p>La s\u00e9curit\u00e9 de Kubernetes se fait sur deux axes : </p> <ul> <li>la s\u00e9curit\u00e9 des composants qui sont configurables dans un cluster.</li> <li>la s\u00e9curit\u00e9 des applications qui sont ex\u00e9cut\u00e9s dans un cluster.</li> </ul> <p>Kubernetes g\u00e8re la s\u00e9curit\u00e9 des composants d\u2019un cluster et non les applications qui sont ex\u00e9cut\u00e9es ou les conteneurs.</p>"},{"location":"kubernetes.html#232-authentification-et-autorisation","title":"2.3.2 - Authentification et autorisation","text":"<p>Kubernetes d\u00e9finit deux cat\u00e9gories d\u2019utilisateurs, les comptes de services g\u00e9r\u00e9s par Kubernetes et les utilisateurs normaux.</p> <p>Les utilisateurs normaux sont :</p> <ul> <li>un administrateur distribuant les cl\u00e9s priv\u00e9es</li> <li>un user store, un d\u00e9p\u00f4t de comptes utilisateurs et de credentials </li> <li>un fichier avec une liste d\u2019utilisateurs et de mots de passe</li> </ul> <p>Les utilisateurs normaux ne peuvent pas \u00eatre ajout\u00e9s \u00e0 un cluster \u00e0 travers les appels API. Un utilisateur qui pr\u00e9sente un certificat sign\u00e9 par la CA (certificate authority) du cluster est consid\u00e9r\u00e9 comme authentifi\u00e9. Chaque utilisateur appartient \u00e0 un groupe, ce qui lui donne certains droits.</p> <p>Kubernetes utilise les certificats pour les connexions clients avec des jetons ou une authentification proxy pour authentifier des requ\u00eates d\u2019API. Pour \u00e9viter une attaque par usurpation d\u2019identit\u00e9, l\u2019utilisation d\u2019un proxy d\u2019authentification est n\u00e9cessaire dans le but de v\u00e9rifier la validit\u00e9 du certificat pr\u00e9sent\u00e9 par le client.</p> <p>Les static token sont un type d\u2019authentification pour l\u2019acc\u00e8s au serveur API. L\u2019administrateur d\u00e9finit un ensemble de jetons d\u2019acc\u00e8s, ces jetons sont li\u00e9s \u00e0 des m\u00e9tadonn\u00e9es qui permettent de lier des utilisateurs \u00e0 des groupes durant le processus d\u2019autorisation.</p> <p>Le service account tokens authentifie les jetons d\u2019une requ\u00eate faite \u00e0 l\u2019API serveur.</p>"},{"location":"kubernetes.html#233-acces-reseau","title":"2.3.3 - Acc\u00e8s r\u00e9seau","text":"<p>Tous les acc\u00e8s de Kubernetes ne sont pas publiquement allou\u00e9s. Chaque acc\u00e8s passe par une  liste d\u2019adresses IP. Par exemple, Les nodes sont configur\u00e9es pour n\u2019accepter que les connexions qui viennent de cette liste.</p> <p>Lorsque l\u2019acc\u00e8s est n\u00e9cessaire, Kubernetes utilise OpenID Connect Tokens, un OAuth2<sup>5</sup> afin qu\u2019une application puisse utiliser des ressources ext\u00e9rieures au nom d\u2019un utilisateur.</p>"},{"location":"kubernetes.html#234-stockage-securise","title":"2.3.4 - Stockage s\u00e9curis\u00e9","text":"<p>Kubernetes d\u00e9finit une notion \u201cSecrets\u201d pour garder une information sensible comme les mots de passe ou les cl\u00e9s d\u2019authentification. Il enregistre cette information dans un pod sp\u00e9cifique ou une image<sup>6</sup> d\u2019un conteneur. Les secrets et les cr\u00e9dentials ont une dur\u00e9e de vie courte. Kubernetes conseille d\u2019encrypter les sauvegardes de la base de donn\u00e9es etcd. </p> <p>Pour supprimer les jetons qui ne sont plus utilis\u00e9s, Kubernetes appelle le daemon \u201ckube-controller-manager\u201d et en particulier la partie Service Account and Token Controllers.</p> <p>Kubernet offre la possibilit\u00e9 de chiffrer les donn\u00e9es qui ne sont pas utilis\u00e9es.  Ces solutions permettent de r\u00e9duire les risques d\u2019attaques.</p>"},{"location":"kubernetes.html#24-limites-de-kubernetes","title":"2.4 - Limites de Kubernetes","text":""},{"location":"kubernetes.html#241-limites-materielles","title":"2.4.1 - Limites mat\u00e9rielles","text":"<p>Kubernetes poss\u00e8de une limitation par la taille maximale des diff\u00e9rentes composantes d\u2019un cluster. Par exemple, il ne peut y avoir plus de 110 pods dans une node .</p> <p>De plus, kubele et les conteneurs en ex\u00e9cution ont besoin de cgroup dans le but de r\u00e9partir les diff\u00e9rentes ressources.</p>"},{"location":"kubernetes.html#242-failles","title":"2.4.2 - Failles","text":"<p>Une faille critique a \u00e9t\u00e9 d\u00e9couverte en 2018. Un utilisateur pouvait se connecter au serveur API et envoyer des requ\u00eates directement aux serveurs backend sans avoir de v\u00e9rification par le serveur API. Les r\u00e9centes failles trouv\u00e9es sur Kubernetes touchent les Windows nodes. Ces failles permettaient \u00e0 un utilisateur d\u2019escalader en mode privil\u00e8ge sur des nodes ou des pods qu\u2019il  cr\u00e9ait.</p>"},{"location":"kubernetes.html#25-sources","title":"2.5 - Sources","text":"<p>Introduction de Kubernetes :</p> <ul> <li>Wikipedia - Kubernetes</li> <li>Wikipedia - Service Mesh</li> <li>Github - Github de Kubernetes</li> <li>Documentation de Kubernetes - What is Kubernetes</li> <li>Google - Clouds r\u00e9gionaux</li> <li>redhat - Microservice</li> </ul> <p>Fonctionnement de Kubernetes :</p> <ul> <li>Documentation de Kubernetes - Cluster Architecture</li> <li>Documentation de Kubernetes - Services Networking</li> </ul> <p>S\u00e9curit\u00e9 de Kubernetes :</p> <ul> <li>Documentation de Kubernetes - Controlling access</li> <li>Stack Overflow - How to set token auth file</li> <li>cvedetails - Kubernetes : Security Vulnerabilities, CVEs</li> <li>LEMONDEINFORMARIQUE - La faille critique de Kubernetes</li> </ul> <p>R\u00e9daction :</p> <ul> <li>Wikipedia - Diagramme des paquetages</li> <li>Universit\u00e9 de Li\u00e8ge - Comment r\u00e9diger un rapport technique ?</li> </ul> <ol> <li> <p>Runtime : environnement d\u2019ex\u00e9cution d\u2019un programme qui est responsable de la communication entre le programme, le mat\u00e9riel et le syst\u00e8me d\u2019exploitation.\u00a0\u21a9</p> </li> <li> <p>Ordonnanceur : l'ordonnance est le composant du noyau du syst\u00e8me d'exploitation choisissant l'ordre d'ex\u00e9cution des processus sur les processeurs d'un ordinateur.\u00a0\u21a9</p> </li> <li> <p>API : Application Programming Interface d\u00e9signe une interface qui permet \u00e0 un programme de communiquer avec d\u2019autres en se basant sur un protocole de communication commun.\u00a0\u21a9</p> </li> <li> <p>gRPC :  gRPC est un composant permettant aux logiciels de communiquer entre eux via HTTP en utilisant l'interface local de la machine, s\u2019abstrayant ainsi de son environnement.\u00a0\u21a9</p> </li> <li> <p>OAuth2 : Open Authorization est une norme con\u00e7ue pour permettre \u00e0 un site Web ou une application d'acc\u00e9der aux ressources h\u00e9berg\u00e9es  par d\u2019autres applications Web au nom d\u2019un utilisateur.\u00a0\u21a9</p> </li> <li> <p>Image : un conteneur inactif persiste dans le temps sous forme d\u2019image, semblable \u00e0 une image de machine virtuelle.\u00a0\u21a9</p> </li> </ol>"}]}